wati_programme
/* Effectué:      Affectation
                  Déclaration
                  While / Do While / For 
                  If / Switch
                  Types
                  Tableaux
                  Incrémentation / Décrémentation
                  Fonctions
                  Procédure
                  Appel
    A effectué:   Suppression ; à la fin des fonctions   
                  Possibilité de faire: expression.structure
                  Test plus poussé
*/

// Test déclaration 
let x : int;
let w : string[5];
let k : couleur;
let a : animal;
typedef struct couleur{
noir: int ; 
rouge : int ;
bleu : char 
};

// Test définition tableau / Structure
typedef struct animal tab[4] of int;
typedef struct vegetal tab[4][5][6][7][1] of int;
typedef struct mineral tab[4]
[8]
[           12]
[4] of char;

// Test de Fonctions

fct man(int x, float y) return int{
    x++;
    return retourner;
};

fct kid() return int{
    x++;
    return retourner;
};

// Test de procedure
procedure woman(char x, bool y){
    y++;
};

procedure dog(char x){
    y++;
   
};

// Test appel et retourne
fct CallMeAndReturn() return int{
    // Appel
    Fonction1();
    Jonction1(truc, bidule, machin);
    Ronction1(

        zigouigoui
    )
    x = fonction1();
    // Retourne
    return;
    return              ;
    return x;
    /*  Ne marche pas
    return int;
    return return;
    */
};
{
    // Test affectation
    x = 3;
    france  = macron;
    fr1425kla_o8 = 12 * 4 / 2 - pm451;
    y += 4;
    y -= 4;
    w++;
    w--;
    z = truc();
    z = truc(machin);
    xin = shin.zhao;
    rin = shangai.ville[9];
    Qin = shangai.ville[f];
    /* Inventaire de ce qui ne marche pas 
    42opk = 45;
    ozei + mp = 12; 
    truc = machin(int truc);
    xin.zhao;
    */
    /* Test de la boucle for*/
    for (i = x; i < x; i++){
        for (; ; i--){
            for (i = 0;;){
                for (; i < n;){
                    x = x % 4;
                    chine.region[4] = france.departement[i];  
                }
            }

        }
    }

    // Test de la boucle while / do while / parsemé de if
    while (a == 5){
        x = x + 3;
        do{
            if (x + 2){
                x = x + 3;
            }
            else{
                if (y){
                    y ++;
                }
                else{
                    k = 4;
                }
            }
        }while(a);
    }

    /* Test Switch */
    switch(4 + 4){
        case 4:
            y = 4;
            x = x + 4;
        case 'c':
            w = w + w5k;
        case "Champion":
            champ = ions;
            ions = champ;
        case true:
            vrai = false;
        default: 
            vrai = true;
            faux = false;
            quatre = 4;
            champollion = Jean-Francois; 
    }
}